MOVIE

CREATE TABLE  "MOVIE" 
   (	"INDATE" DATE NOT NULL ENABLE, 
	"OUTDATE" DATE NOT NULL ENABLE, 
	"MNAME" VARCHAR2(4000), 
	"SCREEN_NO" NUMBER(1,0), 
	"COLLECTION" NUMBER(11,0), 
	 CONSTRAINT "MOVIE_PK" PRIMARY KEY ("SCREEN_NO") ENABLE
   )




2)BOOKING

CREATE TABLE  "BOOKING" 
   (	"SEATNO" VARCHAR2(4000), 
	"SCREEN_NO" NUMBER(1,0), 
	"SHOWDATE" DATE NOT NULL ENABLE, 
	"SHOWTIME" VARCHAR2(4000), 
	"BOOKINGTYPE" VARCHAR2(1), 
	"AMOUNT" NUMBER(11,0), 
	"ENTER_TAX" NUMBER(11,0), 
	"SERVICE_TAX" NUMBER(11,0), 
	"TOTAL" NUMBER(11,0), 
	 CONSTRAINT "BOOKING_PK" PRIMARY KEY ("SEATNO", "SCREEN_NO") ENABLE
   )


3) THEATER

CREATE TABLE  "THEATER" 
   (	"SCREEN_NO" NUMBER(1,0), 
	"CAPACITY" NUMBER(3,0), 
	"SHOW1" VARCHAR2(4000), 
	"SHOW2" VARCHAR2(4000), 
	"SHOW3" VARCHAR2(4000), 
	"SHOW4" VARCHAR2(4000), 
	"SHOW5" VARCHAR2(4000), 
	 CONSTRAINT "THEATER_PK" PRIMARY KEY ("SCREEN_NO") ENABLE
   )


4)COLLECTION

CREATE TABLE  "COLLECTION" 
   (	"SHOWDATE" DATE NOT NULL ENABLE, 
	"SCREEN1" NUMBER, 
	"SCREEN2" NUMBER, 
	"SCREEN3" NUMBER, 
	"SCREEN4" NUMBER, 
	"SCREEN5" NUMBER, 
	"SCREEN6" NUMBER, 
	"TOTAL" NUMBER
   )


5)TICKET

CREATE TABLE  "TICKET" 
   (	"SEATNO" VARCHAR2(4000), 
	"MNAME" VARCHAR2(4000), 
	"SHOWDATE" DATE NOT NULL ENABLE, 
	"SHOWTIME" VARCHAR2(4000), 
	"AMOUNT" NUMBER(11,0), 
	"ENTER_TAX" NUMBER(11,0), 
	"SERVICE_TAX" NUMBER(11,0), 
	"TOTAL" NUMBER(11,0), 
	"SCREEN_NO" NUMBER
   )


6)SECURITY

CREATE TABLE  "SECURITY" 
   (	"USERNAME" VARCHAR2(4000), 
	"PASSWORD" VARCHAR2(4000), 
	 CONSTRAINT "SECURITY_PK" PRIMARY KEY ("USERNAME") ENABLE
   )



7)CLASS

CREATE TABLE  "CLASS" 
   (	"CLASSTYPE" VARCHAR2(4000), 
	"RATE" NUMBER(3,0)
   )


TRIGGER FOR RATE
create or replace trigger t1
before update on class for each row
declare
begin
if(length(:new.rate)!=3) then
raise_application_error(-20110,'Invalid Input');
end if;
end;